# This is a basic workflow to help you get started with Actions

name: deploy_new_site

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
    tags: 
      - test*
      - prod*
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git clone our repo
        uses: actions/checkout@v3
        
      # Runs a single command using the runners shell
      - name: Build part
        run: |
          sudo apt update 
          sudo apt install -y markdown  
          markdown website.md \\| tee index.html
          cat index.html
          
      - name: Upload math result for build_part
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: index.html
          
  test_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [build_part]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:   
      - name: Download artifacts
        uses: actions/download-artifact@v3
        
      # Runs a single command using the runners shell
      - name: Test part
        run: |
          sudo apt update 
          sudo apt install -y libxml2-utils 
          xmllint --html site/index.html   
          
  deploy_part_test:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/test') || startsWith(github.ref, 'refs/heads/main') }}
    needs: [build_part,test_part]
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        
      - name: Deploy part
        env:
          SSHPASS : ${{ secrets.SSHPASS }}
        run: |
         sudo apt update
         sudo apt install -y sshpass
         echo -e " \nThis is test version" >> site/index.html
         sshpass -e scp -P 22987 -oStrictHostKeyChecking=no site/index.html ${{ secrets.DEPLOY_HOST }}
  
  manual_approve_prod:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/prod') && startsWith(github.ref, 'refs/heads/main') }}
    needs: [build_part,test_part]
    environment:
      name: approvers
    
    steps:
    - name: manual approve
      run: |
        echo "Manually approved"
                   
  deploy_part_prod:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/prod') && startsWith(github.ref, 'refs/heads/main') }}
    needs: [build_part,test_part,manual_approve_prod]
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        
      - name: Deploy part
        env:
          SSHPASS : ${{ secrets.SSHPASS }}
        run: |
         sudo apt update
         sudo apt install -y sshpass
         echo -e " \nThis is prod version" >> site/index.html
         sshpass -e scp -P 22987 -oStrictHostKeyChecking=no site/index.html ${{ secrets.DEPLOY_HOST }}

